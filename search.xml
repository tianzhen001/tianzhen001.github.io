<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>layout</title>
      <link href="2020/11/09/2020-11-09-layout/"/>
      <url>2020/11/09/2020-11-09-layout/</url>
      
        <content type="html"><![CDATA[<p>hahhhhahahhahha哈哈哈哈</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>My New Post</title>
      <link href="2020/11/08/my-new-post/"/>
      <url>2020/11/08/my-new-post/</url>
      
        <content type="html"><![CDATA[<p>我的第一个博客</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="2020/11/08/hello-world/"/>
      <url>2020/11/08/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre class=" language-bash"><code class="language-bash">$ hexo new <span class="token string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre class=" language-bash"><code class="language-bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre class=" language-bash"><code class="language-bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre class=" language-bash"><code class="language-bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>My New Post</title>
      <link href="2020/08/08/2020-11-09-layout/webpack-pei-zhi-zhi-nan/"/>
      <url>2020/08/08/2020-11-09-layout/webpack-pei-zhi-zhi-nan/</url>
      
        <content type="html"><![CDATA[<h2 id="webpack概述"><a href="#webpack概述" class="headerlink" title="webpack概述"></a>webpack概述</h2><blockquote><p><em>webpack</em> 是一个现代 JavaScript 应用程序的<em>静态模块打包器(module bundler</em> )</p></blockquote><p><a href="https://www.webpackjs.com/">webpack中文网</a></p><p><a href="https://webpack.js.org/">webpack官网</a></p><p>##webpack做了什么</p><ul><li>语法转换<ul><li>less/sass转换成css</li><li>ES6转换成ES5</li><li>typescript转换成js</li></ul></li><li>html/css/js代码的压缩与合并（打包）</li><li>webpack可以在开发期间提供一个开发环境<ul><li>自动开启浏览器</li><li>自动监视文件变化</li><li>自动刷新浏览器</li></ul></li><li>项目一般都需要经过webpack打包之后才上线。</li></ul><h2 id="webpack模块说明"><a href="#webpack模块说明" class="headerlink" title="webpack模块说明"></a>webpack模块说明</h2><p>webpack会把所有的资源都当成模块</p><ul><li>css</li><li>js</li><li>图片</li><li>字体图标</li></ul><p>webpack给前端开发提供了模块化的开发环境</p><ul><li>对于js文件，webpack中支持AMD、CMD、commonJS、ES6模块化等语法</li><li>有了webpack，我们可以在前端代码中使用任意的模块化语法</li><li>可以在浏览器中使用nodejs的模块化语法<code>const $ = require(&#39;jquery&#39;)</code></li></ul><h2 id="webpack基本使用"><a href="#webpack基本使用" class="headerlink" title="webpack基本使用"></a>webpack基本使用</h2><ul><li>创建一个文件夹<code>webpack-demo</code></li><li>初始化项目 生成<code>package.json</code></li></ul><pre class=" language-bash"><code class="language-bash">yarn init -y</code></pre><ul><li>安装webpack的依赖包</li></ul><pre class=" language-bash"><code class="language-bash">yarn add webpack webpack-cli -D</code></pre><ul><li><p>新建文件<code>src</code>和<code>dist</code>文件夹，，src用于提供源码，，dist用于存放打包后的文件</p></li><li><p>在src下新建了<code>index.js</code>文件，目的：对<code>src/index.js</code>文件进行打包</p></li><li><p>在package.json文件配置了打包的脚本</p></li></ul><pre class=" language-js"><code class="language-js">  <span class="token string">"scripts"</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token string">"build"</span><span class="token punctuation">:</span> <span class="token string">"webpack --config webpack.config.js"</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><ul><li>在项目的根目录，创建一个文件<code>webpack.config.js</code></li><li>执行打包命令</li></ul><pre class=" language-js"><code class="language-js">yarn build</code></pre><h2 id="配置webpack的打包入口"><a href="#配置webpack的打包入口" class="headerlink" title="配置webpack的打包入口"></a>配置webpack的打包入口</h2><ul><li>在<code>webpack.config.js</code>文件中</li></ul><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 这是webpack的配置文件 </span><span class="token comment" spellcheck="true">// webpack是运行在node环境中，webpack可以执行任意的node代码，包括可以使用node中模块。</span>module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 默认： ./src/index.js</span>  entry<span class="token punctuation">:</span> <span class="token string">'./src/app.js'</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h2 id="配置webpack的打包出口"><a href="#配置webpack的打包出口" class="headerlink" title="配置webpack的打包出口"></a>配置webpack的打包出口</h2><blockquote><p>配置webpack最终打包的文件的出口</p></blockquote><pre class=" language-js"><code class="language-js">  <span class="token comment" spellcheck="true">// 配置webpack打包出口</span>  output<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// path： 打包出口的目录,默认 dist, 必须指定绝对路径</span>    path<span class="token punctuation">:</span> path<span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span>__dirname<span class="token punctuation">,</span> <span class="token string">'lib'</span><span class="token punctuation">)</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// filename: 打包出口的文件名字  默认 main.js</span>    filename<span class="token punctuation">:</span> <span class="token string">'bundle.js'</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><p>==如果要配置path，记得是绝对路径==</p><h2 id="配置webpack的打包模式"><a href="#配置webpack的打包模式" class="headerlink" title="配置webpack的打包模式"></a>配置webpack的打包模式</h2><pre class=" language-js"><code class="language-js">  <span class="token comment" spellcheck="true">// 打包模式  development|production</span>  <span class="token comment" spellcheck="true">// development: 打包不会对进行压缩   打包快</span>  <span class="token comment" spellcheck="true">// production: 打包会对代码进行压缩  上线</span>  mode<span class="token punctuation">:</span> <span class="token string">'development'</span></code></pre><h2 id="配置html-webpack-plugin插件"><a href="#配置html-webpack-plugin插件" class="headerlink" title="配置html-webpack-plugin插件"></a>配置html-webpack-plugin插件</h2><blockquote><p>html-webpack-plugin插件能够帮助我们自动在dist中生成一个html文件，并且会自动帮我们引入打包后的文件。</p></blockquote><ul><li>安装html-webpack-plugin插件</li></ul><pre class=" language-bash"><code class="language-bash">yarn add html-webpack-plugin -D</code></pre><ul><li>在<code>webpack.config.js</code>中配置</li></ul><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">//1. 导入html-webpack-plugin插件</span><span class="token keyword">const</span> HtmlWebpackPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'html-webpack-plugin'</span><span class="token punctuation">)</span><span class="token comment" spellcheck="true">// 2.配置webpack的插件，是一个数组</span>plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token keyword">new</span> <span class="token class-name">HtmlWebpackPlugin</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 生成html的模板</span>  template<span class="token punctuation">:</span> <span class="token string">'./src/index.html'</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">]</span></code></pre><h2 id="配置css-loader处理css文件"><a href="#配置css-loader处理css文件" class="headerlink" title="配置css-loader处理css文件"></a>配置css-loader处理css文件</h2><blockquote><p>webpack天生只能处理js文件，如果需要处理其他类型的文件，需要配置loader</p></blockquote><ul><li>安装依赖包</li></ul><pre class=" language-js"><code class="language-js">yarn add css<span class="token operator">-</span>loader style<span class="token operator">-</span>loader <span class="token operator">-</span>D</code></pre><ul><li>配置loader</li></ul><pre class=" language-js"><code class="language-js">module<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token comment" spellcheck="true">// 配置css-loader的规则</span>    <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      <span class="token comment" spellcheck="true">// 匹配所有.css结尾的文件</span>      test<span class="token punctuation">:</span> <span class="token regex">/\.css$/</span><span class="token punctuation">,</span>      <span class="token comment" spellcheck="true">// 使用css-loader 和 style-loader处理</span>      use<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'style-loader'</span><span class="token punctuation">,</span> <span class="token string">'css-loader'</span><span class="token punctuation">]</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token punctuation">]</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><p>==注意：loader加载顺序从右往左==</p><h2 id="配置less-loader处理less文件"><a href="#配置less-loader处理less文件" class="headerlink" title="配置less-loader处理less文件"></a>配置less-loader处理less文件</h2><ul><li>安装依赖包</li></ul><pre class=" language-bash"><code class="language-bash">yarn add less-loader <span class="token function">less</span> -D</code></pre><ul><li>配置less-loader</li></ul><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 配置less-loader的规则</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token comment" spellcheck="true">// 匹配所有.less结尾的文件</span>  test<span class="token punctuation">:</span> <span class="token regex">/\.less$/</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 使用css-loader 和 style-loader处理</span>    use<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'style-loader'</span><span class="token punctuation">,</span> <span class="token string">'css-loader'</span><span class="token punctuation">,</span> <span class="token string">'less-loader'</span><span class="token punctuation">]</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h2 id="配置file-loader处理图片"><a href="#配置file-loader处理图片" class="headerlink" title="配置file-loader处理图片"></a>配置file-loader处理图片</h2><ul><li>安装依赖包</li></ul><pre><code>yarn add file-loader -D</code></pre><ul><li>配置file-loader</li></ul><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// file-loader配置</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  test<span class="token punctuation">:</span> <span class="token regex">/\.(png|jpg|gif)$/</span><span class="token punctuation">,</span>  use<span class="token punctuation">:</span> <span class="token string">'file-loader'</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h2 id="配置url-loader处理图片"><a href="#配置url-loader处理图片" class="headerlink" title="配置url-loader处理图片"></a>配置url-loader处理图片</h2><ul><li>安装</li></ul><pre class=" language-js"><code class="language-js">yarn add url<span class="token operator">-</span>loader file<span class="token operator">-</span>loader <span class="token operator">-</span>D</code></pre><ul><li>配置url-loader</li></ul><pre class=" language-js"><code class="language-js"><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  test<span class="token punctuation">:</span> <span class="token regex">/\.(png|jpg|gif)$/</span><span class="token punctuation">,</span>  use<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    loader<span class="token punctuation">:</span> <span class="token string">'url-loader'</span><span class="token punctuation">,</span>    options<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      limit<span class="token punctuation">:</span> <span class="token number">20</span> <span class="token operator">*</span> <span class="token number">1024</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h2 id="配置字体图标和音视频"><a href="#配置字体图标和音视频" class="headerlink" title="配置字体图标和音视频"></a>配置字体图标和音视频</h2><pre class=" language-js"><code class="language-js"><span class="token comment" spellcheck="true">// 字体图标</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  test<span class="token punctuation">:</span> <span class="token regex">/\.(eot|svg|ttf|woff)$/</span><span class="token punctuation">,</span>  use<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    loader<span class="token punctuation">:</span> <span class="token string">'url-loader'</span><span class="token punctuation">,</span>    options<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      limit<span class="token punctuation">:</span> <span class="token number">20</span> <span class="token operator">*</span> <span class="token number">1024</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  test<span class="token punctuation">:</span> <span class="token regex">/\.(mp3|mp4|ogg)$/</span><span class="token punctuation">,</span>  use<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    loader<span class="token punctuation">:</span> <span class="token string">'url-loader'</span><span class="token punctuation">,</span>    options<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      limit<span class="token punctuation">:</span> <span class="token number">20</span> <span class="token operator">*</span> <span class="token number">1024</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h2 id="配置babel-loader"><a href="#配置babel-loader" class="headerlink" title="配置babel-loader"></a>配置babel-loader</h2><blockquote><p>babel可以把高版本的js语法转成低版本的js语法，保证运行的效果一样。能够兼容更多的浏览器。</p></blockquote><ul><li>安装依赖包</li></ul><pre class=" language-js"><code class="language-js">yarn add  babel<span class="token operator">-</span>loader @babel<span class="token operator">/</span>core @babel<span class="token operator">/</span>preset<span class="token operator">-</span>env <span class="token operator">-</span>D</code></pre><ul><li>配置babel</li></ul><pre class=" language-js"><code class="language-js"><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  test<span class="token punctuation">:</span> <span class="token regex">/\.m?js$/</span><span class="token punctuation">,</span>  exclude<span class="token punctuation">:</span> <span class="token regex">/(node_modules|bower_components)/</span><span class="token punctuation">,</span>  use<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    loader<span class="token punctuation">:</span> <span class="token string">'babel-loader'</span><span class="token punctuation">,</span>    options<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      presets<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token string">'@babel/preset-env'</span><span class="token punctuation">]</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h2 id="提取css到单独的文件中"><a href="#提取css到单独的文件中" class="headerlink" title="提取css到单独的文件中"></a>提取css到单独的文件中</h2><ul><li>安装插件</li></ul><pre class=" language-js"><code class="language-js">yarn add mini<span class="token operator">-</span>css<span class="token operator">-</span>extract<span class="token operator">-</span>plugin <span class="token operator">-</span>D</code></pre><ul><li>配置插件</li></ul><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> MiniCssExtractPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'mini-css-extract-plugin'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment" spellcheck="true">// 配置插件</span>plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>  <span class="token keyword">new</span> <span class="token class-name">MiniCssExtractPlugin</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 指定生成的css文件名和路径</span>    filename<span class="token punctuation">:</span> <span class="token string">'./index.css'</span><span class="token punctuation">,</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span></code></pre><ul><li>配置css和less的loader</li></ul><pre class=" language-js"><code class="language-js"><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  test<span class="token punctuation">:</span> <span class="token regex">/\.css$/</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// css-loader只能够让webpack能够处理css文件</span>  <span class="token comment" spellcheck="true">// style-loader： 能够把处理好的css代码添加到页面中</span>  <span class="token comment" spellcheck="true">// MiniCssExtractPlugin.loader ; 把css提取到单独的css文件中</span>  use<span class="token punctuation">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">'css-loader'</span><span class="token punctuation">]</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  test<span class="token punctuation">:</span> <span class="token regex">/\.less$/</span><span class="token punctuation">,</span>  use<span class="token punctuation">:</span> <span class="token punctuation">[</span>MiniCssExtractPlugin<span class="token punctuation">.</span>loader<span class="token punctuation">,</span> <span class="token string">'css-loader'</span><span class="token punctuation">,</span> <span class="token string">'less-loader'</span><span class="token punctuation">]</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span></code></pre><h2 id="webpack-dev-server的使用"><a href="#webpack-dev-server的使用" class="headerlink" title="webpack-dev-server的使用"></a>webpack-dev-server的使用</h2><blockquote><p>webpack-dev-server不是用来打包的，而是用于启动一个服务器，，，，，当我们代码发生了改变，webpack-dev-server会重新打包（内存）并且会刷新浏览器，实时看到效果</p><p>最新版本的webpack5还不支持，需要降级处理</p></blockquote><p><img src="images/image-20201108181347423.png" alt="image-20201108181347423"></p><ul><li>安装包</li></ul><pre class=" language-bash"><code class="language-bash">yarn add webpack-dev-server -D<span class="token comment" spellcheck="true">## 注意：如果需要使用webpack-dev-server  就不能使用最新的webpack5版本， 应该使用webpack 4</span></code></pre><ul><li>配置一个脚本</li></ul><pre class=" language-js"><code class="language-js">  <span class="token string">"scripts"</span><span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token string">"build"</span><span class="token punctuation">:</span> <span class="token string">"webpack --config webpack.config.js"</span><span class="token punctuation">,</span>    <span class="token string">"serve"</span><span class="token punctuation">:</span> <span class="token string">"webpack-dev-server --config webpack.config.js"</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span></code></pre><ul><li>使用dev脚本</li></ul><pre><code>yarn serve</code></pre><ul><li>常见配置</li></ul><pre class=" language-js"><code class="language-js">  <span class="token comment" spellcheck="true">// devServer的配置</span>  devServer<span class="token punctuation">:</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token comment" spellcheck="true">// 自定义端口</span>    port<span class="token punctuation">:</span> <span class="token number">9090</span><span class="token punctuation">,</span>    <span class="token comment" spellcheck="true">// 自动打开浏览器</span>    open<span class="token punctuation">:</span> <span class="token boolean">true</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span></code></pre><h2 id="webpack处理vue文件"><a href="#webpack处理vue文件" class="headerlink" title="webpack处理vue文件"></a>webpack处理vue文件</h2><ul><li>新建了一个<code>App.vue</code>文件</li></ul><pre class=" language-js"><code class="language-js"><span class="token operator">&lt;</span>template<span class="token operator">></span>  <span class="token operator">&lt;</span>div <span class="token keyword">class</span><span class="token operator">=</span><span class="token string">"app"</span><span class="token operator">></span>我是根组件 <span class="token operator">--</span><span class="token operator">-</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>msg<span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token operator">--</span><span class="token operator">&lt;</span>demo<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>demo<span class="token operator">></span> <span class="token operator">&lt;</span><span class="token operator">/</span>div<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>template<span class="token operator">></span><span class="token operator">&lt;</span>script<span class="token operator">></span><span class="token keyword">export</span> <span class="token keyword">default</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  <span class="token function">data</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>      msg<span class="token punctuation">:</span> <span class="token string">'hello'</span>    <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>  <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">,</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>script<span class="token operator">></span><span class="token operator">&lt;</span>style<span class="token operator">></span><span class="token punctuation">.</span>app <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  background<span class="token operator">-</span>color<span class="token punctuation">:</span> red<span class="token punctuation">;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token operator">&lt;</span><span class="token operator">/</span>style<span class="token operator">></span></code></pre><ul><li>在main.js中导入<code>App.vue</code>根组件，并且渲染成为根组件</li></ul><pre class=" language-js"><code class="language-js"><span class="token keyword">import</span> Vue <span class="token keyword">from</span> <span class="token string">'vue'</span><span class="token keyword">import</span> App <span class="token keyword">from</span> <span class="token string">'./App.vue'</span><span class="token keyword">const</span> vm <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Vue</span><span class="token punctuation">(</span><span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>  el<span class="token punctuation">:</span> <span class="token string">'#app'</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 把App组件渲染成根组件</span>  render<span class="token punctuation">:</span> c <span class="token operator">=</span><span class="token operator">></span> <span class="token function">c</span><span class="token punctuation">(</span>App<span class="token punctuation">)</span><span class="token punctuation">,</span>  <span class="token comment" spellcheck="true">// 把app渲染成为根组件</span>  <span class="token comment" spellcheck="true">// render: function(createElement) &amp;#123;</span>  <span class="token comment" spellcheck="true">//   return createElement(App)</span>  <span class="token comment" spellcheck="true">// &amp;#125;</span><span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span><span class="token punctuation">)</span></code></pre><ul><li><p>报错，因为webpack处理不了vue文件</p></li><li><p>安装依赖包</p></li></ul><pre class=" language-js"><code class="language-js">yarn add vue<span class="token operator">-</span>loader@<span class="token number">15.9</span><span class="token punctuation">.</span><span class="token number">0</span> vue<span class="token operator">-</span>template<span class="token operator">-</span>compiler <span class="token operator">-</span>D    </code></pre><ul><li>在webpack.config.js中配置vue-loader</li></ul><pre class=" language-js"><code class="language-js"><span class="token keyword">const</span> VueLoaderPlugin <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">'vue-loader/lib/plugin'</span><span class="token punctuation">)</span>  plugins<span class="token punctuation">:</span> <span class="token punctuation">[</span>    <span class="token keyword">new</span> <span class="token class-name">VueLoaderPlugin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>  <span class="token punctuation">]</span><span class="token punctuation">,</span>    rules<span class="token punctuation">:</span> <span class="token punctuation">[</span>      <span class="token operator">&amp;</span>#<span class="token number">123</span><span class="token punctuation">;</span>        test<span class="token punctuation">:</span> <span class="token regex">/\.vue$/</span><span class="token punctuation">,</span>        loader<span class="token punctuation">:</span> <span class="token string">'vue-loader'</span>      <span class="token operator">&amp;</span>#<span class="token number">125</span><span class="token punctuation">;</span>    <span class="token punctuation">]</span></code></pre><p>12</p>]]></content>
      
      
      
        <tags>
            
            <tag> webpack </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
